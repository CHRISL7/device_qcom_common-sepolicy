# Copyright (c) 2022, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Changes from Qualcomm Innovation Center are provided under the following license:
#
# Copyright (c) 2022 Qualcomm Innovation Center, Inc. All rights reserved.
# SPDX-License-Identifier: BSD-3-Clause-Clear

type vendor_ims_dcservice, domain;
type vendor_ims_dcservice_exec, exec_type, vendor_file_type, file_type;

init_daemon_domain(vendor_ims_dcservice)
net_domain(vendor_ims_dcservice)

hal_server_domain_bypass(vendor_ims_dcservice, vendor_hal_dcservice_qti)
hal_attribute_service(vendor_hal_dcservice_qti, vendor_hal_imsdc_service)
binder_call(vendor_hal_dcservice_qti_server, servicemanager)
binder_call(vendor_hal_dcservice_qti_client, vendor_hal_dcservice_qti_server)
binder_call(vendor_hal_dcservice_qti_server, vendor_hal_dcservice_qti_client)

#allow ims_dataservice_daemon to connect to server socket hosted in imsdaemon
unix_socket_connect(vendor_ims_dcservice, vendor_ims_service, vendor_ims_service)

allowxperm vendor_ims_dcservice self:udp_socket ioctl RMNET_IOCTL_EXTENDED;

#diag
userdebug_or_eng(`
    diag_use(vendor_ims_dcservice)
')
